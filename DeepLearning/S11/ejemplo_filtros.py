# -*- coding: utf-8 -*-
"""ejemplo_filtros.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OjbnecLbwJd6D5iHS8_klMOOGl00Qk0p
"""

# prompt: codigo para mostrar ejemplos de convolucion con los kernel mas famosos. El ejemplo hagamoslo con una imagen. Agregar filtros para detectar bordes horizontales y verticales, ademas de los que ya presentaste

import cv2
import numpy as np
from matplotlib import pyplot as plt

# Cargar la imagen
img = cv2.imread('ejemplo.jpg', cv2.IMREAD_GRAYSCALE)

# Definir los kernels
kernel_blur = np.array([[1, 1, 1],
                      [1, 1, 1],
                      [1, 1, 1]]) / 9

kernel_sharpen = np.array([[0, -1, 0],
                         [-1, 5, -1],
                         [0, -1, 0]])

kernel_edge_horizontal = np.array([[-1, -1, -1],
                                 [2, 2, 2],
                                 [-1, -1, -1]])

kernel_edge_vertical = np.array([[-1, 2, -1],
                                [-1, 2, -1],
                                [-1, 2, -1]])

# Aplicar la convolución
img_blur = cv2.filter2D(img, -1, kernel_blur)
img_sharpen = cv2.filter2D(img, -1, kernel_sharpen)
img_edge_horizontal = cv2.filter2D(img, -1, kernel_edge_horizontal)
img_edge_vertical = cv2.filter2D(img, -1, kernel_edge_vertical)

# Mostrar las imágenes
plt.subplot(231), plt.imshow(img, cmap='gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])

plt.subplot(232), plt.imshow(img_blur, cmap='gray')
plt.title('Blur'), plt.xticks([]), plt.yticks([])

plt.subplot(233), plt.imshow(img_sharpen, cmap='gray')
plt.title('Sharpen'), plt.xticks([]), plt.yticks([])

plt.subplot(234), plt.imshow(img_edge_horizontal, cmap='gray')
plt.title('Bordes Horizontales'), plt.xticks([]), plt.yticks([])

plt.subplot(235), plt.imshow(img_edge_vertical, cmap='gray')
plt.title('Bordes Verticales'), plt.xticks([]), plt.yticks([])

plt.show()